ques 1

f1 <- factor(sample(LETTERS, size=6, replace=TRUE))
f2 <- factor(sample(LETTERS, size=6, replace=TRUE))
print("Original factors:")
print(f1)
print(f2)
f = factor(c(levels(f1)[f1], levels(f2)[f2]))
print("After concatenate factor becomes:")
print(f)

ques 2

import pandas as pd
df=pd.read_csv('diabetes.csv')
from sklearn.tree import DecisionTreeClassifier # Import Decision Tree Classifier
from sklearn.model_selection import train_test_split # Import train_test_split function
x=df.drop(['Outcome'], axis=1)
y=df.Outcome
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=1)
model = DecisionTreeClassifier()
model = model.fit(x_train,y_train)
y_pred = model.predict(x_test)
from sklearn import metrics #Import scikit-learn metrics module for accuracy calculation
print("Accuracy:",metrics.accuracy_score(y_test, y_pred)*100)
from sklearn.metrics import confusion_matrix
confusion_matrix(y_test,y_pred)
print("Accuracy:",((82+27)/154))
from sklearn.metrics import classification_report
print(classification_report(y_test,y_pred))
model.predict([[6,148,72,35,0,33.6,0.627,50]])
from io import StringIO
import six 
from IPython.display import Image  
from sklearn.tree import export_graphviz
import pydotplus
features=x.columns
dot_data = StringIO()
export_graphviz(model, out_file=dot_data,filled=True, rounded=True,special_characters=True, feature_names = features,class_names=['0','1'])
graph = pydotplus.graph_from_dot_data(dot_data.getvalue())  
graph.write_png('diabetes_set.png')
Image(graph.create_png())
